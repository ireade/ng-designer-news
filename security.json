{
    "rules": {
      
      // Anyone can read any data
       ".read": true,
        
        "stories": {

          // Each story
          "$story_id": {
            
            // Only logged in users can create a story
            ".write": "auth !== null",
                                   
            "title": {
              // Validate only if the data doesn't already exist (so data cannot be edited) and if the new data is a string
              ".validate": "!data.exists() && newData.isString()"
            },
            "date": { 
              // Validate only if the data doesn't already exist, and the data must be equal to the current datetime
              ".validate": "!data.exists() && newData.val() <= now"
            },
            "url": {
              ".validate": "!data.exists() && newData.isString()"
            },
            "description": {
              ".validate": "!data.exists() && newData.isString()"
            },
            
            "user": {
              // Validate only if the data doesn't already exist, and the data must have the specified children
              ".validate": "!data.exists() && newData.hasChildren(['first_name', 'last_name', 'title', 'id'])"
            },
            
            
            "voteCount": {
              // Data can only be validated to this node if -
                // The data is new and the value is equal to 0 OR
                // The data already exists, the new value is equal to the old value plus 1, and the user making this addition is not the author of the story
              ".validate": "( !data.exists() && newData.val() === 0 )
                            || ( data.exists() && newData.val() === data.val() + 1 && auth.uid !== root.child('stories').child($story_id).child('user').child('id').val() )"
            },
            "voters": {
              ".validate": true
            },
            
            "commentCount": {
              ".validate": true
            },
            
            "comments": {
              "$comment_id": {
                
                "voteCount": {
                  // Data can only be validated to this node if -
                    // The data is new and the value is equal to 0 OR
                    // If data already exists, the new value is equal to the old value plus 1, and the user making this addition is not the author of the comment
                  ".validate": "( !data.exists() && newData.val() === 0 )
                              || ( data.exists() && newData.val() === data.val() + 1 && auth.uid !== root.child('stories').child($story_id).child('comments').child($comment_id).child('user').child('id').val() )"
                }
                
              }
            }
            
          }
        },
        
        
        "users": {

          // Each user
          "$user_id": {
            
            // Data can only be written if -
              // The user doesn't already exist OR
              // The user does exist and is the same as the current authenticated user
            ".write": "!data.exists() || ( data.exists() && auth.uid === $user_id )",

            "uid": {
              // Data can only be validated to this node if -
                // The data doesn't already exist OR
                // The new data is equal to the old data, i.e. the data not be changed once set
              ".validate": "!data.exists() || data.val() === newData.val()"
            },
            
            "first_name": {
              // Data can only be validated to this node if -
                // The new data is a string OR
                // No new data is incoming, i.e. the data is being deleted
              ".validate": "newData.isString() || !newData.exists()"
            },
            
            "last_name": {
              ".validate": "newData.isString() || !newData.exists()"
            },
            
            "title": {
              ".validate": "newData.isString() || !newData.exists()"
            }
            
          }
        },
        
        "karma": {

          // Each user's karma
          "$user_id": {

            // Data can only be written if -
              // The user doesnt already exist OR
              // No new data is incoming, i.e. the data is being deleted OR
              // The authentication adding to this user's karma is not the same
            ".write": "!data.exists() || !newData.exists() || ( auth !== null && auth.uid !== $user_id )",

            // Data can only be validated to this node if The
              // The data doesn't already exist OR
              // Data does exist and the new karma is equal to the old value plus 1
            ".validate": "!data.exists() || ( data.exists() && newData.val() === data.val() + 1 )"
          }
        }
    }
}